syntax = "proto3";

option go_package = "amusing-x.com/pangu/panguservice";

import "google/api/annotations.proto";
import "pangu/category_create.proto";
import "pangu/category_list.proto";
import "pangu/category_destroy.proto";
import "pangu/category.proto";
import "pangu/category_update.proto";
import "pangu/login.proto";

package panguservice;

message BlankParams{}

message PongResponse {
  string serverName = 1;
}

service PanGuService {
  rpc Pong(BlankParams) returns (PongResponse) {
    option (google.api.http) = {
      get: "/v1/pangu/pong"
    };
  }

  rpc CategoryCreate(CategoryCreateRequest) returns (CategoryCreateResponse) {
    option (google.api.http) = {
      post: "/v1/pangu/category"
      body: "*"
    };
  }

  rpc Category(CategoryRequest) returns (CategoryResponse) {
    option (google.api.http) = {
      get: "/v1/pangu/category"
    };
  }

  rpc CategoryList(CategoryListRequest) returns (CategoryListResponse) {
    option(google.api.http) = {
      get: "/v1/pangu/categories"
    };
  }

  rpc CategoryDelete(CategoryDeleteRequest) returns (CategoryDeleteResponse) {
    option(google.api.http) = {
      delete: "/v1/pangu/category/delete"
    };
  }

  rpc CategoryUpdate(CategoryUpdateRequest) returns (CategoryUpdateResponse) {
    option(google.api.http) = {
      put: "/v1/pangu/category/update"
      body: "*"
    };
  }

  rpc Login(OAuthLoginRequest) returns (OAuthLoginResponse) {
    option(google.api.http) = {
      put: "/v1/pangu/oauth/login"
      body: "*"
    };
  }
}

