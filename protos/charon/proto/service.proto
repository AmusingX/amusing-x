syntax = "proto3";

option go_package = "amusing-x.com/charon/charonservice";

package charonservice;

import "charon/proto/category.proto";
import "charon/proto/categories.proto";
import "charon/proto/category_delete.proto";
import "charon/proto/category_update.proto";

import "pangu/proto/product.proto";
import "pangu/proto/product_create.proto";
import "pangu/proto/product_update.proto";
import "pangu/proto/product_list.proto";
import "pangu/proto/product_delete.proto";
import "pangu/proto/product_get.proto";

service CharonServ {
  rpc Pong(BlankParams) returns (PongResponse) {}

  rpc Create(CategoryCreateRequest) returns (CategoryCreateResponse) {}
  rpc Categories(CategoryListRequest) returns (CategoryListResponse) {}
  rpc Delete(CategoryDeleteRequest) returns (CategoryDeleteResponse) {}
  rpc Category(CategoryRequest) returns (CategoryResponse) {}
  rpc Update(CategoryUpdateRequest) returns (CategoryUpdateResponse) {}

  rpc ProductCreate(panguservice.ProductCreateRequest) returns (panguservice.Product) {}
  rpc ProductDelete(panguservice.ProductDeleteRequest) returns (panguservice.ProductDeleteResponse) {}
  rpc Products(panguservice.ProductListRequest) returns (panguservice.ProductListResponse) {}
  rpc Product(panguservice.ProductRequest) returns (panguservice.Product) {}
  rpc ProductUpdate(panguservice.ProductUpdateRequest) returns (panguservice.Product) {}
}

message BlankParams{}

message PongResponse {
  string serverName = 1;
}